// Financial Helper Functions
// Extracted from app/koperasi/financial/page.tsx for reusability

import { 
  ShoppingCart, 
  Receipt, 
  TrendingUp, 
  TrendingDown, 
  DollarSign,
  Wallet,
  Building2,
  CreditCard
} from 'lucide-react';

/**
 * Get color classes for transaction type
 */
export const getTransactionTypeColor = (type: string): string => {
  switch (type) {
    case 'SALE':
    case 'INCOME':
      return 'text-green-600 bg-green-50';
    case 'PURCHASE':
    case 'EXPENSE':
      return 'text-red-600 bg-red-50';
    default:
      return 'text-gray-600 bg-gray-50';
  }
};

/**
 * Get icon component for transaction type
 */
export const getTransactionTypeIcon = (type: string) => {
  switch (type) {
    case 'SALE':
      return <ShoppingCart className="w-4 h-4" />;
    case 'INCOME':
      return <TrendingUp className="w-4 h-4" />;
    case 'PURCHASE':
      return <Receipt className="w-4 h-4" />;
    case 'EXPENSE':
      return <TrendingDown className="w-4 h-4" />;
    default:
      return <DollarSign className="w-4 h-4" />;
  }
};

/**
 * Get icon component for payment method with color
 */
export const getPaymentMethodIcon = (method: string) => {
  switch (method) {
    case 'CASH':
      return <Wallet className="w-4 h-4 text-green-500" />;
    case 'TRANSFER':
      return <Building2 className="w-4 h-4 text-blue-500" />;
    case 'CREDIT':
      return <CreditCard className="w-4 h-4 text-purple-500" />;
    default:
      return <Wallet className="w-4 h-4 text-gray-500" />;
  }
};

/**
 * Get category from transaction type
 */
export const getCategoryFromType = (type: string): string => {
  switch (type) {
    case 'SALE': 
      return 'Penjualan';
    case 'PURCHASE': 
      return 'Pembelian';
    case 'INCOME': 
      return 'Pemasukan';
    case 'EXPENSE': 
      return 'Pengeluaran';
    default: 
      return 'Lainnya';
  }
};

/**
 * Get readable label for transaction type
 */
export const getTransactionTypeLabel = (type: string): string => {
  switch (type) {
    case 'SALE': 
      return 'Penjualan';
    case 'INCOME': 
      return 'Pemasukan';
    case 'PURCHASE': 
      return 'Pembelian';
    case 'EXPENSE': 
      return 'Pengeluaran';
    case 'RETURN':
      return 'Retur';
    default: 
      return type;
  }
};

/**
 * Get readable label for payment method
 */
export const getPaymentMethodLabel = (method: string): string => {
  switch (method) {
    case 'CASH':
      return 'Tunai';
    case 'TRANSFER':
      return 'Transfer';
    case 'CREDIT':
      return 'Kredit';
    default:
      return method;
  }
};

/**
 * Check if transaction type is auto-generated (read-only)
 */
export const isAutoGeneratedTransaction = (type: string): boolean => {
  return ['SALE', 'PURCHASE', 'RETURN'].includes(type);
};

/**
 * Check if transaction type is manual (editable)
 */
export const isManualTransaction = (type: string): boolean => {
  return ['INCOME', 'EXPENSE'].includes(type);
};
