# ================================
# DATABASE CONFIGURATION
# ================================

# PostgreSQL Database Connection URL
# Format: postgresql://[user]:[password]@[host]:[port]/[database]?schema=public
# Default PostgreSQL port is 5432
# 
# ‚ö†Ô∏è TEAM STANDARD - Database Naming:
#   Development: koperasi_dev (recommended for local testing)
#   Production:  koperasi_umb (for deployment)
#
# ‚ÑπÔ∏è Each developer can use their own:
#   - PostgreSQL password (keep your own)
#   - PostgreSQL port (5432 default, or 5431, 5433, etc.)
#   - But database NAME should match for consistency
#
# Examples:
#   Developer A: postgresql://postgres:password123@localhost:5432/koperasi_dev?schema=public
#   Developer B: postgresql://postgres:mypass456@localhost:5431/koperasi_dev?schema=public
#   Production:  postgresql://produser:strongpass@prod-host:5432/koperasi_umb?schema=public
#
# ‚ö†Ô∏è IMPORTANT: Always include ?schema=public at the end!
DATABASE_URL="postgresql://postgres:your_password_here@localhost:5432/koperasi_dev?schema=public"

# ================================
# AUTHENTICATION & SECURITY
# ================================

# JWT Secret Key for token generation and verification
# ‚ö†Ô∏è CRITICAL FOR TEAM: ALL developers MUST use the SAME value in development!
# 
# üîí DEVELOPMENT TEAM STANDARD (DO NOT CHANGE):
JWT_SECRET="koperasi-umb-dev-team-secret-2025-sync-required"
#
# Why this matters:
# - JWT tokens are signed with this secret
# - If team members use different secrets, tokens won't verify across machines
# - Results in: login works but API calls fail with 401 errors
# 
# Production: Generate unique secret using:
# node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"

# ================================
# APPLICATION ENVIRONMENT
# ================================

# Node Environment: development | production | test
# - development: enables hot reload, detailed errors, etc.
# - production: optimized for performance and security
NODE_ENV="development"

# ================================
# NOTES & RECOMMENDATIONS
# ================================

# 1. DATABASE SETUP:
#    - Make sure PostgreSQL is installed and running
#    - Create database: CREATE DATABASE koperasi_umb;
#    - Update DATABASE_URL with your actual credentials
#
# 2. SECURITY:
#    - NEVER commit .env file to git (it's in .gitignore)
#    - Use strong passwords for database
#    - Generate a unique JWT_SECRET for production
#    - Keep this .env.example file updated when adding new variables
#
# 3. INITIAL SETUP:
#    - Copy this file: cp .env.example .env
#    - Update values with your actual configuration
#    - Run: npm install
#    - Run migrations: npx prisma migrate dev
#    - Seed database: npx prisma db seed
#
# 4. DEVELOPMENT:
#    - Start dev server: npm run dev
#    - Access at: http://localhost:3000
#
# 5. PRODUCTION:
#    - Set NODE_ENV="production"
#    - Use strong, unique JWT_SECRET
#    - Use production database credentials
#    - Never use default/example values

# ================================
# DEFAULT ADMIN CREDENTIALS
# ================================
# After seeding database, you can login with:
#
# Super Admin:
#   Email: superadmin@koperasi.com
#   Password: Password123!
#
# Admin:
#   Email: admin@koperasi.com
#   Password: Password123!
#
# Supplier (for testing):
#   Email: supplier@test.com
#   Password: Password123!
#
# IMPORTANT: Change these passwords after first login in production!
